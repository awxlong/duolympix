// lib/features/community/data/models/comment.dart
/// Duolympix has a feature inspired by ‘达目标’ (yoobingo @ http://www.yoobingo.com/) where
/// there's a public forum for users to discuss quest-related tips. Here, we implement a simple
/// comment section.
/// 
/// Implemention-wise, this is an entity representing a comment on a quest
/// 
/// This class models a user comment associated with a specific quest.
/// It stores the comment content, author, and timestamp, enabling
/// community interaction around quests.
library;
import 'package:floor/floor.dart';
import 'package:solo_leveling/global_data/converters/date_time_converter.dart';

/// Database entity for comments on quests
/// 
/// Maps to the 'comments' table in the SQLite database.
/// Stores user feedback and discussions related to specific quests.
@Entity(tableName: 'comments')
class Comment {
  /// Auto-generated primary key for the comment
  /// 
  /// Nullable because it is auto-generated by the database on insertion.
  @PrimaryKey(autoGenerate: true)
  final int? id;
  
  /// ID of the quest this comment belongs to
  /// 
  /// Used to associate comments with specific quests.
  @ColumnInfo(name: 'questId')
  final String questId;
  
  /// Username of the user who posted the comment
  /// 
  /// Stored as text for display purposes.
  @ColumnInfo(name: 'username')
  final String username;
  
  /// Content of the comment
  /// 
  /// The main text of the comment, typically written by the user.
  @ColumnInfo(name: 'content')
  final String content;
  
  /// Timestamp of when the comment was posted
  /// 
  /// Converted to/from milliseconds since epoch using [DateTimeConverter].
  @ColumnInfo(name: 'timestamp')
  @TypeConverters([DateTimeConverter])
  final DateTime timestamp;
  
  /// Constructor for creating a comment
  /// 
  /// [id] is auto-generated by the database and should usually be omitted
  /// when creating new comments. Other parameters are required to define
  /// the comment details.
  Comment({
    this.id,
    required this.questId,
    required this.username,
    required this.content,
    required this.timestamp,
  });
}
